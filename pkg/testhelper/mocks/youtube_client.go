// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	io "io"

	youtube "github.com/kkdai/youtube/v2"
	mock "github.com/stretchr/testify/mock"
)

// YoutubeClient is an autogenerated mock type for the YoutubeClient type
type YoutubeClient struct {
	mock.Mock
}

// GetStream provides a mock function with given fields: video, format
func (_m *YoutubeClient) GetStream(video *youtube.Video, format *youtube.Format) (io.ReadCloser, int64, error) {
	ret := _m.Called(video, format)

	var r0 io.ReadCloser
	if rf, ok := ret.Get(0).(func(*youtube.Video, *youtube.Format) io.ReadCloser); ok {
		r0 = rf(video, format)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	var r1 int64
	if rf, ok := ret.Get(1).(func(*youtube.Video, *youtube.Format) int64); ok {
		r1 = rf(video, format)
	} else {
		r1 = ret.Get(1).(int64)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(*youtube.Video, *youtube.Format) error); ok {
		r2 = rf(video, format)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetVideo provides a mock function with given fields: videoId
func (_m *YoutubeClient) GetVideo(videoId string) (*youtube.Video, error) {
	ret := _m.Called(videoId)

	var r0 *youtube.Video
	if rf, ok := ret.Get(0).(func(string) *youtube.Video); ok {
		r0 = rf(videoId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*youtube.Video)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(videoId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
